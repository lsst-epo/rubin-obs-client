/* eslint-disable */
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `DateTime` scalar type represents a point in time. */
  DateTime: { input: any; output: any; }
  /** The `Number` scalar type represents a number that can be a float, an integer or a null value. */
  Number: { input: any; output: any; }
  /** The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value. */
  QueryArgument: { input: any; output: any; }
};

export type Address = AddressInterface & ElementInterface & {
  __typename?: 'Address';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Address_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all addresses. */
export type AddressInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** First line of the address */
  addressLine1: Maybe<Scalars['String']['output']>;
  /** Second line of the address */
  addressLine2: Maybe<Scalars['String']['output']>;
  /** Administrative area. */
  administrativeArea: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Two-letter country code */
  countryCode: Scalars['String']['output'];
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Dependent locality */
  dependentLocality: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The first name on the address. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The full name on the address. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The last name on the address. */
  lastName: Maybe<Scalars['String']['output']>;
  /** Latitude */
  latitude: Maybe<Scalars['String']['output']>;
  /** Locality */
  locality: Maybe<Scalars['String']['output']>;
  /** Longitude */
  longitude: Maybe<Scalars['String']['output']>;
  /** Organization name */
  organization: Maybe<Scalars['String']['output']>;
  /** Organization tax ID */
  organizationTaxId: Maybe<Scalars['String']['output']>;
  /** Postal code */
  postalCode: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Sorting code */
  sortingCode: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all addresses. */
export type AddressInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type AssetCriteriaInput = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the assets’ filenames. */
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the assets have alternative text. */
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ image heights. */
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** A list of transform handles to preload. */
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type Auth = {
  __typename?: 'Auth';
  jwt: Maybe<Scalars['String']['output']>;
  jwtExpiresAt: Maybe<Scalars['Float']['output']>;
  refreshToken: Maybe<Scalars['String']['output']>;
  refreshTokenExpiresAt: Maybe<Scalars['Float']['output']>;
  requiresTwoFactor: Maybe<Scalars['Boolean']['output']>;
  schema: Maybe<Scalars['String']['output']>;
  user: Maybe<UserInterface>;
};

export type CantoAdditionalType = {
  __typename?: 'CantoAdditionalType';
  AltTextEN: Maybe<Scalars['String']['output']>;
  AltTextES: Maybe<Scalars['String']['output']>;
  CaptionEN: Maybe<Scalars['String']['output']>;
  CaptionES: Maybe<Scalars['String']['output']>;
  Credit: Maybe<Scalars['String']['output']>;
  Description: Maybe<Scalars['String']['output']>;
  ID: Maybe<Scalars['String']['output']>;
  MediaConsent: Maybe<Scalars['String']['output']>;
  MetadataVersion: Maybe<Scalars['String']['output']>;
  Publisher: Maybe<Scalars['String']['output']>;
  PublisherID: Maybe<Scalars['String']['output']>;
  SocialMediaDescription: Maybe<Scalars['String']['output']>;
  SocialMediaHandles: Maybe<Scalars['String']['output']>;
  SpatialCoordinateFrame: Maybe<Scalars['String']['output']>;
  SpatialCoordinateSystemProjection: Maybe<Scalars['String']['output']>;
  SpatialReferenceDimension: Maybe<Scalars['String']['output']>;
  SpatialReferencePixel: Maybe<Scalars['String']['output']>;
  SpatialReferenceValue: Maybe<Scalars['String']['output']>;
  SpatialRotation: Maybe<Scalars['String']['output']>;
  SpatialScale: Maybe<Scalars['String']['output']>;
  Title: Maybe<Scalars['String']['output']>;
  TitleEN: Maybe<Scalars['String']['output']>;
  TitleES: Maybe<Scalars['String']['output']>;
  Type: Maybe<Scalars['String']['output']>;
  UploadedBy: Maybe<Scalars['String']['output']>;
  UploaderContact: Maybe<Scalars['String']['output']>;
  UsageTerms: Maybe<Scalars['String']['output']>;
  WebDAMGroupID: Maybe<Scalars['String']['output']>;
  WebDAMMediaType: Maybe<Scalars['String']['output']>;
  WebDAMPublisher: Maybe<Scalars['String']['output']>;
  WebDAMPublisherID: Maybe<Scalars['String']['output']>;
  WebDAMSublocation: Maybe<Scalars['String']['output']>;
};

/** This is the interface implemented by CantoDamAsset. */
export type CantoDamAssetInterface = {
  additional: Maybe<CantoAdditionalType>;
  approvalStatus: Maybe<Scalars['String']['output']>;
  created: Maybe<Scalars['String']['output']>;
  default: Maybe<CantoDefaultType>;
  dpi: Maybe<Scalars['String']['output']>;
  height: Maybe<Scalars['String']['output']>;
  id: Maybe<Scalars['String']['output']>;
  keyword: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  lastUploaded: Maybe<Scalars['String']['output']>;
  md5: Maybe<Scalars['String']['output']>;
  metadata: Maybe<CantoMetadataType>;
  name: Maybe<Scalars['String']['output']>;
  owner: Maybe<Scalars['String']['output']>;
  ownerName: Maybe<Scalars['String']['output']>;
  relatedAlbums: Maybe<Array<Maybe<CantoRelatedAlbumsType>>>;
  scheme: Maybe<Scalars['String']['output']>;
  size: Maybe<Scalars['String']['output']>;
  smartTags: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  tag: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  time: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  url: Maybe<CantoUrlType>;
  versionHistory: Maybe<Array<Maybe<CantoVersionHistoryType>>>;
  width: Maybe<Scalars['String']['output']>;
};

export type CantoDefaultType = {
  __typename?: 'CantoDefaultType';
  Author: Maybe<Scalars['String']['output']>;
  ContentType: Maybe<Scalars['String']['output']>;
  Copyright: Maybe<Scalars['String']['output']>;
  DateCreated: Maybe<Scalars['String']['output']>;
  DateModified: Maybe<Scalars['String']['output']>;
  DateUploaded: Maybe<Scalars['String']['output']>;
  Dimensions: Maybe<Scalars['String']['output']>;
  GPS: Maybe<Scalars['String']['output']>;
  LowJPG: Maybe<Scalars['String']['output']>;
  ModifiedBy: Maybe<Scalars['String']['output']>;
  Name: Maybe<Scalars['String']['output']>;
  Resolution: Maybe<Scalars['String']['output']>;
  Size: Maybe<Scalars['String']['output']>;
  UploadedBy: Maybe<Scalars['String']['output']>;
};

export type CantoMetadataType = {
  __typename?: 'CantoMetadataType';
  AnimationIterations: Maybe<Scalars['String']['output']>;
  AssetDataSizeLong: Maybe<Scalars['String']['output']>;
  BackgroundColor: Maybe<Scalars['String']['output']>;
  BitsPerPixel: Maybe<Scalars['String']['output']>;
  ColorResolutionDepth: Maybe<Scalars['String']['output']>;
  Comment: Maybe<Scalars['String']['output']>;
  CreateDate: Maybe<Scalars['String']['output']>;
  DurationTime: Maybe<Scalars['String']['output']>;
  FileAccessDateTime: Maybe<Scalars['String']['output']>;
  FileInodeChangeDateTime: Maybe<Scalars['String']['output']>;
  FileModificationDateTime: Maybe<Scalars['String']['output']>;
  FileName: Maybe<Scalars['String']['output']>;
  FileType: Maybe<Scalars['String']['output']>;
  FileTypeDetail: Maybe<Scalars['String']['output']>;
  FileTypeExtension: Maybe<Scalars['String']['output']>;
  FinfotoolVersion: Maybe<Scalars['String']['output']>;
  FlightFileExtension: Maybe<Scalars['String']['output']>;
  FlightFileType: Maybe<Scalars['String']['output']>;
  FrameCount: Maybe<Scalars['String']['output']>;
  GIFVersion: Maybe<Scalars['String']['output']>;
  HasColorMap: Maybe<Scalars['String']['output']>;
  ImageHeight: Maybe<Scalars['String']['output']>;
  ImageSize: Maybe<Scalars['String']['output']>;
  ImageWidth: Maybe<Scalars['String']['output']>;
  MIMEType: Maybe<Scalars['String']['output']>;
  Megapixels: Maybe<Scalars['String']['output']>;
  Orientation: Maybe<Scalars['String']['output']>;
  Panoramas: Maybe<Scalars['String']['output']>;
  RSize: Maybe<Scalars['String']['output']>;
  WHRotated: Maybe<Scalars['String']['output']>;
};

export type CantoRelatedAlbumsType = {
  __typename?: 'CantoRelatedAlbumsType';
  dpi: Maybe<Scalars['String']['output']>;
  height: Maybe<Scalars['String']['output']>;
  id: Maybe<Scalars['String']['output']>;
  idPath: Maybe<Scalars['String']['output']>;
  name: Maybe<Scalars['String']['output']>;
  namePath: Maybe<Scalars['String']['output']>;
  schema: Maybe<Scalars['String']['output']>;
  size: Maybe<Scalars['String']['output']>;
  url: Maybe<CantoRelatedAlbumsUrlType>;
  width: Maybe<Scalars['String']['output']>;
};

export type CantoRelatedAlbumsUrlType = {
  __typename?: 'CantoRelatedAlbumsUrlType';
  detail: Maybe<Scalars['String']['output']>;
};

export type CantoUrlType = {
  __typename?: 'CantoUrlType';
  HighJPG: Maybe<Scalars['String']['output']>;
  LowJPG: Maybe<Scalars['String']['output']>;
  PNG: Maybe<Scalars['String']['output']>;
  detail: Maybe<Scalars['String']['output']>;
  directUrlOriginal: Maybe<Scalars['String']['output']>;
  directUrlPreview: Maybe<Scalars['String']['output']>;
  directUrlPreviewPlay: Maybe<Scalars['String']['output']>;
  download: Maybe<Scalars['String']['output']>;
  metadata: Maybe<Scalars['String']['output']>;
  preview: Maybe<Scalars['String']['output']>;
};

export type CantoVersionHistoryType = {
  __typename?: 'CantoVersionHistoryType';
  comment: Maybe<Scalars['String']['output']>;
  created: Maybe<Scalars['String']['output']>;
  currentVersion: Maybe<Scalars['String']['output']>;
  no: Maybe<Scalars['String']['output']>;
  ownerName: Maybe<Scalars['String']['output']>;
  time: Maybe<Scalars['String']['output']>;
  uri: Maybe<CantoVersionHistoryUriType>;
  version: Maybe<Scalars['String']['output']>;
};

export type CantoVersionHistoryUriType = {
  __typename?: 'CantoVersionHistoryUriType';
  download: Maybe<Scalars['String']['output']>;
  preview: Maybe<Scalars['String']['output']>;
};

export type CategoryCriteriaInput = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfaceParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all categories. */
export type CategoryInterfacePrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Element = ElementInterface & {
  __typename?: 'Element';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Element_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type EntryCriteriaInput = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Whether to only return entries that the user has permission to edit. */
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level: InputMaybe<Scalars['Int']['input']>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type FileInput = {
  /** The contents of the file in Base64 format. If provided, takes precedence over the URL. */
  fileData: InputMaybe<Scalars['String']['input']>;
  /** The file name to use (including the extension) data with the `fileData` field. */
  filename: InputMaybe<Scalars['String']['input']>;
  /** The URL of the file. */
  url: InputMaybe<Scalars['String']['input']>;
};

export type ForPageInput = {
  /** The number of items per page */
  items: InputMaybe<Scalars['Int']['input']>;
  /** The page number */
  page: InputMaybe<Scalars['Int']['input']>;
};

/** This is the interface implemented by all global sets. */
export type GlobalSetInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all global sets. */
export type GlobalSetInterface_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Activates user. Requires `code` and `id` from Craft activation email. Returns success message. */
  activateUser: Scalars['String']['output'];
  /** Logs a user in. Returns user and token. */
  authenticate: Auth;
  /** Deletes authenticated user. Returns success message. */
  deleteAccount: Scalars['String']['output'];
  /** Deletes authenticated user refresh token. Useful for logging out of current device. Returns boolean. */
  deleteRefreshToken: Scalars['Boolean']['output'];
  /** Deletes all refresh tokens belonging to the authenticated user. Useful for logging out of all devices. Returns boolean. */
  deleteRefreshTokens: Scalars['Boolean']['output'];
  /** Deletes authenticated password-less user. Returns success message. */
  deleteSocialAccount: Scalars['String']['output'];
  /** Authenticates a CST Editor using a Facebook Sign-In token. Returns user and token. */
  facebookSignInCstEditor: Auth;
  /** Authenticates a Editors using a Facebook Sign-In token. Returns user and token. */
  facebookSignInEditors: Auth;
  /** Authenticates a Educators using a Facebook Sign-In token. Returns user and token. */
  facebookSignInEducators: Auth;
  /** Authenticates a Students using a Facebook Sign-In token. Returns user and token. */
  facebookSignInStudents: Auth;
  /** Sends a password reset email to the user's email address. Returns success message. */
  forgottenPassword: Scalars['String']['output'];
  /** Authenticates a CST Editor using a Google Sign-In ID token. Returns user and token. */
  googleSignInCstEditor: Auth;
  /** Authenticates a Editors using a Google Sign-In ID token. Returns user and token. */
  googleSignInEditors: Auth;
  /** Authenticates a Educators using a Google Sign-In ID token. Returns user and token. */
  googleSignInEducators: Auth;
  /** Authenticates a Students using a Google Sign-In ID token. Returns user and token. */
  googleSignInStudents: Auth;
  ping: Maybe<Scalars['String']['output']>;
  /** Refreshes a user's JWT. Checks for the occurrence of the `gql_refreshToken` cookie, and falls back to `refreshToken` argument. */
  refreshToken: Auth;
  /** Registers a Educators user. Returns user and token. */
  registerEducators: Auth;
  /** Registers a Students user. Returns user and token. */
  registerStudents: Auth;
  /** Resends an activation email to the user. Returns success message. */
  resendActivation: Scalars['String']['output'];
  /** Sets password for unauthenticated user. Requires `code` and `id` from Craft reset password email. Returns success message. */
  setPassword: Scalars['String']['output'];
  /** Updates password for authenticated user. Requires JWT and current password. Returns success message. */
  updatePassword: Scalars['String']['output'];
  /** Updates authenticated user. Returns user. */
  updateViewer: Maybe<UserInterface>;
};


export type MutationActivateUserArgs = {
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
};


export type MutationAuthenticateArgs = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationDeleteAccountArgs = {
  confirmPassword: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationDeleteRefreshTokenArgs = {
  refreshToken: InputMaybe<Scalars['String']['input']>;
};


export type MutationFacebookSignInCstEditorArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInEditorsArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInEducatorsArgs = {
  code: Scalars['String']['input'];
};


export type MutationFacebookSignInStudentsArgs = {
  code: Scalars['String']['input'];
};


export type MutationForgottenPasswordArgs = {
  email: Scalars['String']['input'];
};


export type MutationGoogleSignInCstEditorArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInEditorsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInEducatorsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationGoogleSignInStudentsArgs = {
  idToken: Scalars['String']['input'];
};


export type MutationRefreshTokenArgs = {
  refreshToken: InputMaybe<Scalars['String']['input']>;
};


export type MutationRegisterEducatorsArgs = {
  email: Scalars['String']['input'];
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fullName: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  school: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};


export type MutationRegisterStudentsArgs = {
  email: Scalars['String']['input'];
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fullName: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  school: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};


export type MutationResendActivationArgs = {
  email: Scalars['String']['input'];
};


export type MutationSetPasswordArgs = {
  code: Scalars['String']['input'];
  id: Scalars['String']['input'];
  password: Scalars['String']['input'];
};


export type MutationUpdatePasswordArgs = {
  confirmPassword: Scalars['String']['input'];
  currentPassword: Scalars['String']['input'];
  newPassword: Scalars['String']['input'];
};


export type MutationUpdateViewerArgs = {
  email: InputMaybe<Scalars['String']['input']>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fullName: InputMaybe<Scalars['String']['input']>;
  photo: InputMaybe<FileInput>;
  preferredLanguage: InputMaybe<Scalars['String']['input']>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  school: InputMaybe<Scalars['String']['input']>;
  username: InputMaybe<Scalars['String']['input']>;
};

/** This is the interface implemented by all Neo blocks. */
export type NeoBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all Neo blocks. */
export type NeoBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type Query = {
  __typename?: 'Query';
  /** This query is used to query for a single address. */
  address: Maybe<AddressInterface>;
  /** This query is used to return the number of addresses. */
  addressCount: Scalars['Int']['output'];
  /** This query is used to query for addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** This query is used to query for a single asset. */
  asset: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int']['output'];
  /** This query is used to query for assets. */
  assets: Maybe<Array<Maybe<AssetInterface>>>;
  /** Entries within the callouts section. */
  calloutsEntries: Maybe<Array<Maybe<CalloutsSectionEntryUnion>>>;
  /** This query is used to query for categories. */
  categories: Maybe<Array<Maybe<CategoryInterface>>>;
  /** This query is used to query for a single category. */
  category: Maybe<CategoryInterface>;
  /** This query is used to return the number of categories. */
  categoryCount: Scalars['Int']['output'];
  /** This query is used to query for entries. */
  entries: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int']['output'];
  /** Entries within the events section. */
  eventsEntries: Maybe<Array<Maybe<EventsSectionEntryUnion>>>;
  /** Generates the Facebook OAuth URL for allowing users to authenticate. */
  facebookOauthUrl: Scalars['String']['output'];
  /** Entries within the galleries section. */
  galleriesEntries: Maybe<Array<Maybe<GalleriesSectionEntryUnion>>>;
  /** This query is used to query for a single global set. */
  globalSet: Maybe<GlobalSetInterface>;
  /** This query is used to query for global sets. */
  globalSets: Maybe<Array<Maybe<GlobalSetInterface>>>;
  /** Entries within the glossaryTerms section. */
  glossaryTermsEntries: Maybe<Array<Maybe<GlossaryTermsSectionEntryUnion>>>;
  /** Entries within the homepage section. */
  homepageEntries: Maybe<Array<Maybe<HomepageSectionEntryUnion>>>;
  /** Entries within the investigations section. */
  investigationsEntries: Maybe<Array<Maybe<InvestigationsSectionEntryUnion>>>;
  /** Entries within the jobs section. */
  jobsEntries: Maybe<Array<Maybe<JobsSectionEntryUnion>>>;
  /** Entries within the news section. */
  newsEntries: Maybe<Array<Maybe<NewsSectionEntryUnion>>>;
  /** Entries within the pages section. */
  pagesEntries: Maybe<Array<Maybe<PagesSectionEntryUnion>>>;
  /** Entries within the people section. */
  peopleEntries: Maybe<Array<Maybe<PeopleSectionEntryUnion>>>;
  ping: Maybe<Scalars['String']['output']>;
  /** Entries within the publications section. */
  publicationsEntries: Maybe<Array<Maybe<PublicationsSectionEntryUnion>>>;
  /** Entries within the searchResults section. */
  searchResultsEntries: Maybe<Array<Maybe<SearchResultsSectionEntryUnion>>>;
  /** Entries within the slideshows section. */
  slideshowsEntries: Maybe<Array<Maybe<SlideshowsSectionEntryUnion>>>;
  /** Entries within the staffProfiles section. */
  staffProfilesEntries: Maybe<Array<Maybe<StaffProfilesSectionEntryUnion>>>;
  /** This query is used to query for a single tag. */
  tag: Maybe<TagInterface>;
  /** This query is used to return the number of tags. */
  tagCount: Scalars['Int']['output'];
  /** This query is used to query for tags. */
  tags: Maybe<Array<Maybe<TagInterface>>>;
  /** This query is used to query for a single user. */
  user: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int']['output'];
  /** Entries within the userProfilePage section. */
  userProfilePageEntries: Maybe<Array<Maybe<UserProfilePageSectionEntryUnion>>>;
  /** This query is used to query for users. */
  users: Maybe<Array<Maybe<UserInterface>>>;
  /** Gets authenticated user. */
  viewer: Maybe<UserInterface>;
};


export type QueryAddressArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressCountArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetCountArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryAssetsArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryCalloutsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryCategoriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryCategoryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryCategoryCountArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEntryCountArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryEventsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGalleriesEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryGlobalSetArgs = {
  colophon: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  facebook: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  handle: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  instagram: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkedIn: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  supportersLogos: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  supportersLogosAlt: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  twitter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  youTube: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryGlobalSetsArgs = {
  colophon: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  facebook: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  handle: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  instagram: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkedIn: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteTitle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  supportersLogos: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  supportersLogosAlt: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  twitter: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  youTube: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
};


export type QueryGlossaryTermsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryHomepageEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryInvestigationsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryJobsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryNewsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryPagesEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryPeopleEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryPublicationsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QuerySearchResultsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QuerySlideshowsEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryStaffProfilesEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryTagArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryTagCountArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryTagsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserCountArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUserProfilePageEntriesArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryUsersArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type TagCriteriaInput = {
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all tags. */
export type TagInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the tag. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the tag. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all tags. */
export type TagInterface_CountArgs = {
  field: Scalars['String']['input'];
};

export type User = ElementInterface & UserInterface & {
  __typename?: 'User';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  emailSubscription: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  preferredLanguage: Maybe<Scalars['String']['output']>;
  requestDeletion: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  school: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


export type User_CountArgs = {
  field: Scalars['String']['input'];
};


export type UserAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type UserEmailSubscriptionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserPreferredLanguageArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserRequestDeletionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCriteriaInput = {
  /** Narrows the query results based on whether the users have uploaded any assets. */
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on whether the users are listed as the author of any entries. */
  authors: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the users’ first names. */
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the users’ full names. */
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the user group the users belong to. */
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ IDs. */
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  /** Determines which site(s) the elements should be queried in, based on their language. */
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ last names. */
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Sets the limit for paginated results. */
  limit: InputMaybe<Scalars['Int']['input']>;
  /** Sets the offset for paginated results. */
  offset: InputMaybe<Scalars['Int']['input']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy: InputMaybe<Scalars['String']['input']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on a reference string. */
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results to only elements that match a search query. */
  search: InputMaybe<Scalars['String']['input']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique: InputMaybe<Scalars['Boolean']['input']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The user’s addresses. */
  addresses: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The user’s email. */
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The user’s first name. */
  firstName: Maybe<Scalars['String']['output']>;
  /** The user’s first name or username. */
  friendlyName: Maybe<Scalars['String']['output']>;
  /** The user’s full name. */
  fullName: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The user’s last name. */
  lastName: Maybe<Scalars['String']['output']>;
  /** The user’s full name or username. */
  name: Scalars['String']['output'];
  /** The user’s photo. */
  photo: Maybe<AssetInterface>;
  /** The user’s preferences. */
  preferences: Scalars['String']['output'];
  /** The user’s preferred language. */
  preferredLanguage: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The username. */
  username: Maybe<Scalars['String']['output']>;
};


/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String']['input'];
};


/** This is the interface implemented by all users. */
export type UserInterfaceAddressesArgs = {
  administrativeArea: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  countryCode: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  ownerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereBetweenFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values that the key should be between */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereContainsInFilterInput = {
  /** The keys to search on, you can use the `field.subField` syntax for nested fields */
  keys: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** The value that should be fuzzy matched in the key-values */
  value: InputMaybe<Scalars['String']['input']>;
};

export type WhereFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The comparison operator to use, e.g.: `=`, `>`, `<=`, etc. The default is `=` */
  operator: InputMaybe<Scalars['String']['input']>;
  /** The value to match when searching */
  value: InputMaybe<Scalars['String']['input']>;
};

export type WhereInFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values that should be in the key */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereNotBetweenFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The values the key should not be between */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type WhereNotInFiltersInput = {
  /** The key to search on, you can use the `field.subField` syntax for nested fields */
  key: InputMaybe<Scalars['String']['input']>;
  /** The the values that should not be in the key */
  values: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type AssetVariants_Asset = AssetInterface & ElementInterface & {
  __typename?: 'assetVariants_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  altText: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type AssetVariants_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type AssetVariants_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type AssetVariants_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type AssetVariants_AssetNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AssetVariants_AssetPrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AssetVariants_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type AssetVariants_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AssetVariants_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type AssetVariants_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type AssetVariants_Asset_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'assetVariants_asset_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  assetLink: Array<Maybe<AssetInterface>>;
  assetName: Maybe<Scalars['String']['output']>;
  commonName: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type AssetVariants_Asset_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type AssetVariants_Asset_BlockTypeAssetLinkArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type AssetVariants_Asset_BlockTypeCommonNameArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type AssetVariants_Header_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'assetVariants_header_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  assetHeader: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type AssetVariants_Header_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type AssetsList_MatrixField = AssetsList_Item_BlockType;

export type AssetsList_Item_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'assetsList_item_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  assetSingle: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  linkText: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type AssetsList_Item_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type AssetsList_Item_BlockTypeAssetSingleArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CalloutsSectionEntryUnion = Callouts_CalloutEvent_Entry | Callouts_CalloutNews_Entry | Callouts_CalloutQuote_Entry | Callouts_CalloutTwoTone_Entry | Callouts_Callout_Entry;

export type Callouts_CalloutEvent_Entry = ElementInterface & EntryInterface & {
  __typename?: 'callouts_calloutEvent_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  eventEntry: Array<Maybe<EntryInterface>>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Callouts_CalloutEvent_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Callouts_CalloutEvent_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryEventEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutEvent_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Callouts_CalloutNews_Entry = ElementInterface & EntryInterface & {
  __typename?: 'callouts_calloutNews_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  newsEntry: Array<Maybe<EntryInterface>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Callouts_CalloutNews_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Callouts_CalloutNews_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryNewsEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutNews_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Callouts_CalloutQuote_Entry = ElementInterface & EntryInterface & {
  __typename?: 'callouts_calloutQuote_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  attribution: Maybe<Scalars['String']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  colorScheme: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  imageQuote: Array<Maybe<AssetInterface>>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  links: Maybe<Array<Maybe<Links_NeoField>>>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  quote: Maybe<Scalars['String']['output']>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Callouts_CalloutQuote_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Callouts_CalloutQuote_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryColorSchemeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryImageQuoteArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Callouts_CalloutQuote_EntryLinksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Callouts_CalloutQuote_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutQuote_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Callouts_CalloutTwoTone_Entry = ElementInterface & EntryInterface & {
  __typename?: 'callouts_calloutTwoTone_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  captionRichText: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentImage: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  links: Maybe<Array<Maybe<Links_NeoField>>>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Callouts_CalloutTwoTone_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Callouts_CalloutTwoTone_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Callouts_CalloutTwoTone_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryContentImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Callouts_CalloutTwoTone_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryLinksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Callouts_CalloutTwoTone_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_CalloutTwoTone_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Callouts_Callout_Entry = ElementInterface & EntryInterface & {
  __typename?: 'callouts_callout_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  backgroundColor: Maybe<Scalars['String']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  links: Maybe<Array<Maybe<Links_NeoField>>>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  order: Maybe<Scalars['String']['output']>;
  padImage: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  ratio: Maybe<Scalars['String']['output']>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
  width: Maybe<Scalars['String']['output']>;
};


export type Callouts_Callout_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Callouts_Callout_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryBackgroundColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Callouts_Callout_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryLinksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Callouts_Callout_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryOrderArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryRatioArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Callouts_Callout_EntryWidthArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ComplexTable_BlockType = ElementInterface & SuperTableBlockInterface & {
  __typename?: 'complexTable_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  tableRow: Array<Maybe<TableRow_MatrixField>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ComplexTable_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ComplexTable_BlockTypeTableRowArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ComplexTable_SuperTableField = ComplexTable_BlockType;

export type ContactFormTopics_MatrixField = ContactFormTopics_Topic_BlockType;

export type ContactFormTopics_Topic_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contactFormTopics_topic_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  topicLabel: Maybe<Scalars['String']['output']>;
  topicValue: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContactFormTopics_Topic_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContactForm_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'contactForm_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  contactFormTopics: Array<Maybe<ContactFormTopics_MatrixField>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContactForm_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContactForm_GlobalSetContactFormTopicsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContactInfo_MatrixField = ContactInfo_Mail_BlockType | ContactInfo_Phone_BlockType;

export type ContactInfo_Mail_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contactInfo_mail_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContactInfo_Mail_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContactInfo_Phone_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'contactInfo_phone_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContactInfo_Phone_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocksNews_NeoField = ContentBlocksNews_ContactStaff_BlockType | ContentBlocksNews_Game_BlockType | ContentBlocksNews_Image_BlockType | ContentBlocksNews_LinkedAsset_BlockType | ContentBlocksNews_RelatedContentItem_BlockType | ContentBlocksNews_RelatedContent_BlockType | ContentBlocksNews_Text_BlockType | ContentBlocksNews_Video_BlockType;

export type ContentBlocksNews_ContactStaff_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_contactStaff_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  staffEntry: Array<Maybe<EntryInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_ContactStaff_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocksNews_ContactStaff_BlockTypeStaffEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocksNews_Game_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_game_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  game: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_Game_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocksNews_Game_BlockTypeGameArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocksNews_Image_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  contentImage: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  floatDirection: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocksNews_Image_BlockTypeContentImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocksNews_Image_BlockTypeFloatDirectionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocksNews_LinkedAsset_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_linkedAsset_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  externalUrl: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_LinkedAsset_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocksNews_RelatedContentItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_relatedContentItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  pagePostEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_RelatedContentItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocksNews_RelatedContentItem_BlockTypePagePostEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocksNews_RelatedContent_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_relatedContent_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  numberOfItems: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_RelatedContent_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocksNews_RelatedContent_BlockTypeNumberOfItemsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocksNews_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocksNews_Video_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocksNews_video_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  externalUrlTranslatable: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocksNews_Video_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_NeoField = ContentBlocks_AccordionGroup_BlockType | ContentBlocks_Accordion_BlockType | ContentBlocks_Callout_BlockType | ContentBlocks_ComplexTable_BlockType | ContentBlocks_Contact_BlockType | ContentBlocks_CtaGrid_BlockType | ContentBlocks_Cta_BlockType | ContentBlocks_DownloadList_BlockType | ContentBlocks_Game_BlockType | ContentBlocks_Iframe_BlockType | ContentBlocks_ImageGridItem_BlockType | ContentBlocks_ImageGrid_BlockType | ContentBlocks_Image_BlockType | ContentBlocks_InvestigationCta_BlockType | ContentBlocks_InvestigationGrid_BlockType | ContentBlocks_KeyNumbersGridItem_BlockType | ContentBlocks_KeyNumbersGrid_BlockType | ContentBlocks_Link_BlockType | ContentBlocks_NewsItem_BlockType | ContentBlocks_News_BlockType | ContentBlocks_PeopleBlock_BlockType | ContentBlocks_PublicationsList_BlockType | ContentBlocks_RelatedContentItem_BlockType | ContentBlocks_RelatedContent_BlockType | ContentBlocks_ScheduleRow_BlockType | ContentBlocks_Schedule_BlockType | ContentBlocks_Share_BlockType | ContentBlocks_SimpleTable_BlockType | ContentBlocks_SlideBlock_BlockType | ContentBlocks_Slide_BlockType | ContentBlocks_StaffGridItem_BlockType | ContentBlocks_StaffGrid_BlockType | ContentBlocks_SummitStatus_BlockType | ContentBlocks_TableGroup_BlockType | ContentBlocks_Text_BlockType | ContentBlocks_Video_BlockType;

export type ContentBlocks_AccordionGroup_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_accordionGroup_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_AccordionGroup_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Accordion_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_accordion_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Accordion_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Callout_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_callout_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  callout: Array<Maybe<EntryInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Callout_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Callout_BlockTypeCalloutArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_ComplexTable_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_complexTable_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  complexTable: Array<Maybe<ComplexTable_SuperTableField>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  sites: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  verticalAlignment: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ComplexTable_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_ComplexTable_BlockTypeComplexTableArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocks_ComplexTable_BlockTypeSitesArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_ComplexTable_BlockTypeVerticalAlignmentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_Contact_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_contact_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  linkText: Maybe<Scalars['String']['output']>;
  pageEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Contact_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Contact_BlockTypePageEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_CtaGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_ctaGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_CtaGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Cta_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_cta_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  contentImage: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Cta_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Cta_BlockTypeContentImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_DownloadList_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_downloadList_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  assetsList: Array<Maybe<AssetsList_MatrixField>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_DownloadList_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_DownloadList_BlockTypeAssetsListArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_Game_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_game_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  game: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Game_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Game_BlockTypeGameArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_Iframe_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_iframe_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  embedCode: Maybe<Scalars['String']['output']>;
  embedTitle: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  externalUrl: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  fullWidth: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Iframe_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_ImageGridItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_imageGridItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  contentImage: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ImageGridItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_ImageGridItem_BlockTypeContentImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ContentBlocks_ImageGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_imageGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ImageGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Image_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  contentImage: Array<Maybe<AssetInterface>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  floatDirection: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Image_BlockTypeContentImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocks_Image_BlockTypeFloatDirectionArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_InvestigationCta_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_investigationCta_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  investigation: Array<Maybe<EntryInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  useExternalLink: Maybe<Scalars['Boolean']['output']>;
};


export type ContentBlocks_InvestigationCta_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_InvestigationCta_BlockTypeInvestigationArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_InvestigationGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_investigationGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_InvestigationGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_KeyNumbersGridItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_keyNumbersGridItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  footer: Maybe<Scalars['String']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  postscript: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  subheading: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_KeyNumbersGridItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_KeyNumbersGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_keyNumbersGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_KeyNumbersGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Link_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_link_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Link_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_NewsItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_newsItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  newsEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_NewsItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_NewsItem_BlockTypeNewsEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_News_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_news_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  numberOfItems: Maybe<Scalars['String']['output']>;
  postType: Array<Maybe<CategoryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_News_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_News_BlockTypeNumberOfItemsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_News_BlockTypePostTypeArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_PeopleBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_peopleBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  people: Array<Maybe<EntryInterface>>;
  peopleLayout: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_PeopleBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_PeopleBlock_BlockTypePeopleArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_PeopleBlock_BlockTypePeopleLayoutArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_PublicationsList_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_publicationsList_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  publication: Array<Maybe<EntryInterface>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_PublicationsList_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_PublicationsList_BlockTypePublicationArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_RelatedContentItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_relatedContentItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  pagePostEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_RelatedContentItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_RelatedContentItem_BlockTypePagePostEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_RelatedContent_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_relatedContent_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  numberOfItems: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_RelatedContent_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_RelatedContent_BlockTypeNumberOfItemsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_ScheduleRow_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_scheduleRow_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  bold: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  description: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  endTime: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  startTime: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_ScheduleRow_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Schedule_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_schedule_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  date: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  description: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Schedule_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Share_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_share_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Share_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_SimpleTable_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_simpleTable_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  simpleTable: Array<Maybe<SimpleTable_MatrixField>>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  sites: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_SimpleTable_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_SimpleTable_BlockTypeSimpleTableArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentBlocks_SimpleTable_BlockTypeSitesArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_SlideBlock_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_slideBlock_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  numberOfItems: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_SlideBlock_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_SlideBlock_BlockTypeDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_SlideBlock_BlockTypeNumberOfItemsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_Slide_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_slide_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  galleryEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  staffEntry: Array<Maybe<EntryInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Slide_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_Slide_BlockTypeGalleryEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_Slide_BlockTypeStaffEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_StaffGridItem_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_staffGridItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  staffEntry: Array<Maybe<EntryInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_StaffGridItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_StaffGridItem_BlockTypeStaffEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_StaffGrid_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_staffGrid_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  numberOfItems: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  staffType: Array<Maybe<CategoryInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_StaffGrid_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_StaffGrid_BlockTypeNumberOfItemsArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type ContentBlocks_StaffGrid_BlockTypeStaffTypeArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_SummitStatus_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_summitStatus_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  summitStatusLayout: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_SummitStatus_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_SummitStatus_BlockTypeSummitStatusLayoutArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_TableGroup_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_tableGroup_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The child block types for this Neo block */
  children: Maybe<Array<Maybe<NeoBlockInterface>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  sites: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_TableGroup_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentBlocks_TableGroup_BlockTypeSitesArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type ContentBlocks_Text_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_text_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Text_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentBlocks_Video_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'contentBlocks_video_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  externalUrlTranslatable: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type ContentBlocks_Video_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type ContentImages_Asset = AssetInterface & ElementInterface & {
  __typename?: 'contentImages_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  altText: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type ContentImages_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type ContentImages_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type ContentImages_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type ContentImages_AssetNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentImages_AssetPrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type ContentImages_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type ContentImages_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type ContentImages_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type CustomBreadcrumbs_NeoField = CustomBreadcrumbs_AncestorsAndRoot_BlockType;

export type CustomBreadcrumbs_AncestorsAndRoot_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'customBreadcrumbs_ancestorsAndRoot_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  pageEntry: Array<Maybe<EntryInterface>>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type CustomBreadcrumbs_AncestorsAndRoot_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type CustomBreadcrumbs_AncestorsAndRoot_BlockTypePageEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type CustomHero_MatrixField = CustomHero_CustomHero_BlockType;

export type CustomHero_CustomHero_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'customHero_customHero_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  flag: Maybe<Scalars['String']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  teaser: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type CustomHero_CustomHero_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type CustomHero_CustomHero_BlockTypeImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type EventFilters_Category = CategoryInterface & ElementInterface & {
  __typename?: 'eventFilters_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type EventFilters_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type EventFilters_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type EventFilters_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type EventsSectionEntryUnion = Events_Events_Entry;

export type Events_Events_Entry = ElementInterface & EntryInterface & {
  __typename?: 'events_events_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  address: Maybe<Scalars['String']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  city: Maybe<Scalars['String']['output']>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  country: Maybe<Scalars['String']['output']>;
  date: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  eventEndTime: Maybe<Scalars['DateTime']['output']>;
  eventStartTime: Maybe<Scalars['DateTime']['output']>;
  eventType: Array<Maybe<CategoryInterface>>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  registrationCloseDate: Maybe<Scalars['DateTime']['output']>;
  registrationOpenDate: Maybe<Scalars['DateTime']['output']>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  startDate: Maybe<Scalars['DateTime']['output']>;
  state: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  timezone: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Events_Events_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Events_Events_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Events_Events_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryEventTypeArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Events_Events_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Events_Events_EntryTimezoneArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type Footer_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'footer_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  colophon: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  links: Maybe<Array<Maybe<Links_NeoField>>>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  supportersLogos: Array<Maybe<AssetInterface>>;
  supportersLogosAlt: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Footer_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};


export type Footer_GlobalSetLinksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Footer_GlobalSetSupportersLogosArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type GalleriesSectionEntryUnion = Galleries_Gallery_Entry;

export type Galleries_Gallery_Entry = ElementInterface & EntryInterface & {
  __typename?: 'galleries_gallery_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** Canto Dam Asset field */
  assetAlbum: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richTextDescription: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Galleries_Gallery_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Galleries_Gallery_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryAssetAlbumArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Galleries_Gallery_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Galleries_Gallery_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Galleries_Gallery_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type GalleryItemTags_Tag = ElementInterface & TagInterface & {
  __typename?: 'galleryItemTags_Tag';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the tag. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the tag. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type GalleryItemTags_Tag_CountArgs = {
  field: Scalars['String']['input'];
};

export type GalleryTypes_Category = CategoryInterface & ElementInterface & {
  __typename?: 'galleryTypes_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type GalleryTypes_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type GalleryTypes_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GalleryTypes_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type GeneralImages_Asset = AssetInterface & ElementInterface & {
  __typename?: 'generalImages_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  altText: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type GeneralImages_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type GeneralImages_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type GeneralImages_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type GeneralImages_AssetNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type GeneralImages_AssetPrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type GeneralImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type GeneralImages_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type GeneralImages_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type GeneralImages_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type GlossaryTermsSectionEntryUnion = GlossaryTerms_GlossaryTerm_Entry;

export type GlossaryTerms_GlossaryTerm_Entry = ElementInterface & EntryInterface & {
  __typename?: 'glossaryTerms_glossaryTerm_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  caption: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type GlossaryTerms_GlossaryTerm_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type GlossaryTerms_GlossaryTerm_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type GlossaryTerms_GlossaryTerm_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Heroes_Asset = AssetInterface & ElementInterface & {
  __typename?: 'heroes_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  altText: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type Heroes_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type Heroes_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Heroes_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Heroes_AssetNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Heroes_AssetPrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Heroes_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type Heroes_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Heroes_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type Heroes_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type HomepageSectionEntryUnion = Homepage_Homepage_Entry;

export type Homepage_Homepage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'homepage_homepage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  customHero: Array<Maybe<CustomHero_MatrixField>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  newsEntry: Array<Maybe<EntryInterface>>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  pageType: Maybe<Scalars['String']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Homepage_Homepage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Homepage_Homepage_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Homepage_Homepage_EntryCustomHeroArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Homepage_Homepage_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Homepage_Homepage_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryNewsEntryArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryPageTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Homepage_Homepage_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type InvestigationsSectionEntryUnion = Investigations_Investigation_Entry;

export type Investigations_Investigation_Entry = ElementInterface & EntryInterface & {
  __typename?: 'investigations_investigation_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  externalUrlTranslatable: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  investigationDescription: Maybe<Scalars['String']['output']>;
  investigationStatus: Maybe<Scalars['String']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  landingPage: Array<Maybe<EntryInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Investigations_Investigation_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Investigations_Investigation_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type Investigations_Investigation_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryInvestigationStatusArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryLandingPageArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Investigations_Investigation_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type JobTypes_Category = CategoryInterface & ElementInterface & {
  __typename?: 'jobTypes_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type JobTypes_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type JobTypes_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type JobTypes_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type JobsSectionEntryUnion = Jobs_Job_Entry;

export type Jobs_Job_Entry = ElementInterface & EntryInterface & {
  __typename?: 'jobs_job_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  closeDate: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  externalUrl: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  jobPosition: Array<Maybe<CategoryInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  openDate: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  subLocation: Array<Maybe<CategoryInterface>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Jobs_Job_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Jobs_Job_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryJobPositionArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Jobs_Job_EntrySubLocationArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type LandingNavigation_MatrixField = LandingNavigation_NavItem_BlockType;

export type LandingNavigation_NavItem_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'landingNavigation_navItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  navLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type LandingNavigation_NavItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

/** This is the interface implemented by all links. */
export type LinkField_Link = {
  __typename?: 'linkField_Link';
  ariaLabel: Maybe<Scalars['String']['output']>;
  customText: Maybe<Scalars['String']['output']>;
  element: Maybe<ElementInterface>;
  target: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  type: Maybe<Scalars['String']['output']>;
  url: Maybe<Scalars['String']['output']>;
};

export type Links_NeoField = Links_Link_BlockType;

export type Links_Link_BlockType = ElementInterface & NeoBlockInterface & {
  __typename?: 'links_link_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the Neo block. */
  fieldId: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The Neo block’s level. */
  level: Maybe<Scalars['Int']['output']>;
  mixedLink: Maybe<LinkField_Link>;
  /** The ID of the primary owner of the Neo block. */
  primaryOwnerId: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the Neo block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the Neo block’s type. */
  typeHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the Neo block’s type. */
  typeId: Maybe<Scalars['Int']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type Links_Link_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type Location_Category = CategoryInterface & ElementInterface & {
  __typename?: 'location_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  address: Maybe<Scalars['String']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  city: Maybe<Scalars['String']['output']>;
  country: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  state: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Location_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type Location_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Location_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type NewsFilters_Category = CategoryInterface & ElementInterface & {
  __typename?: 'newsFilters_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type NewsFilters_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type NewsFilters_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type NewsFilters_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type NewsSectionEntryUnion = News_Post_Entry;

export type NewsTags_Tag = ElementInterface & TagInterface & {
  __typename?: 'newsTags_Tag';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the tag. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the tag. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type NewsTags_Tag_CountArgs = {
  field: Scalars['String']['input'];
};

export type News_Post_Entry = ElementInterface & EntryInterface & {
  __typename?: 'news_post_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  captionRichText: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocksNews: Maybe<Array<Maybe<ContentBlocksNews_NeoField>>>;
  date: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  postTags: Array<Maybe<TagInterface>>;
  postType: Array<Maybe<CategoryInterface>>;
  pressReleaseId: Maybe<Scalars['String']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  sidebarAssets: Array<Maybe<SidebarAssets_MatrixField>>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  teaser: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type News_Post_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type News_Post_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryContentBlocksNewsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type News_Post_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type News_Post_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryPostTagsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type News_Post_EntryPostTypeArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type News_Post_EntrySidebarAssetsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type PagesSectionEntryUnion = Pages_EducatorPages_Entry | Pages_InvestigationLandingPage_Entry | Pages_Pages_Entry | Pages_RedirectPage_Entry | Pages_StudentPages_Entry;

export type Pages_EducatorPages_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_educatorPages_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  isVisible: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  overlapHero: Maybe<Scalars['Boolean']['output']>;
  pageType: Maybe<Scalars['String']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  showSiblingNav: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  subHeroText: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_EducatorPages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_EducatorPages_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_EducatorPages_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_EducatorPages_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryPageTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_EducatorPages_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Pages_InvestigationLandingPage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_investigationLandingPage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  featuredImage: Array<Maybe<AssetInterface>>;
  header: Maybe<Scalars['String']['output']>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  isVisible: Maybe<Scalars['Boolean']['output']>;
  landingNavigation: Array<Maybe<LandingNavigation_MatrixField>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_InvestigationLandingPage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_InvestigationLandingPage_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_InvestigationLandingPage_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryFeaturedImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_InvestigationLandingPage_EntryLandingNavigationArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_InvestigationLandingPage_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_InvestigationLandingPage_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Pages_Pages_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_pages_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  colorScheme: Maybe<Scalars['String']['output']>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  eventType: Array<Maybe<CategoryInterface>>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  isVisible: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  overlapHero: Maybe<Scalars['Boolean']['output']>;
  pageType: Maybe<Scalars['String']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  showSiblingNav: Maybe<Scalars['Boolean']['output']>;
  showSidebar: Maybe<Scalars['Boolean']['output']>;
  sidebarAssets: Array<Maybe<SidebarAssets_MatrixField>>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  subHeroText: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_Pages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_Pages_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryColorSchemeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_Pages_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryEventTypeArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_Pages_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryPageTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_Pages_EntrySidebarAssetsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type Pages_RedirectPage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_redirectPage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  isVisible: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  linkTo: Maybe<LinkField_Link>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_RedirectPage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_RedirectPage_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_RedirectPage_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type Pages_StudentPages_Entry = ElementInterface & EntryInterface & {
  __typename?: 'pages_studentPages_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocks: Maybe<Array<Maybe<ContentBlocks_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  description: Maybe<Scalars['String']['output']>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  focalPointX: Maybe<Scalars['Number']['output']>;
  focalPointY: Maybe<Scalars['Number']['output']>;
  hero: Array<Maybe<AssetInterface>>;
  hideTitle: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  isVisible: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  overlapHero: Maybe<Scalars['Boolean']['output']>;
  pageType: Maybe<Scalars['String']['output']>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  showSiblingNav: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  subHeroText: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Pages_StudentPages_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Pages_StudentPages_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryContentBlocksArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_StudentPages_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryHeroArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Pages_StudentPages_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryPageTypeArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Pages_StudentPages_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type PeopleSectionEntryUnion = People_Person_Entry;

export type People_Person_Entry = ElementInterface & EntryInterface & {
  __typename?: 'people_person_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** Canto Dam Asset field */
  cantoAssetSingle: Maybe<Array<Maybe<CantoDamAssetInterface>>>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  personAffiliation: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type People_Person_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type People_Person_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryCantoAssetSingleArgs = {
  except: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  first: InputMaybe<Scalars['Boolean']['input']>;
  forPage: InputMaybe<ForPageInput>;
  last: InputMaybe<Scalars['Boolean']['input']>;
  nth: InputMaybe<Scalars['Int']['input']>;
  random: InputMaybe<Scalars['Int']['input']>;
  reverse: InputMaybe<Scalars['Boolean']['input']>;
  shuffle: InputMaybe<Scalars['Int']['input']>;
  skip: InputMaybe<Scalars['Int']['input']>;
  sortBy: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortByDesc: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  where: InputMaybe<WhereFiltersInput>;
  whereBetween: InputMaybe<WhereBetweenFiltersInput>;
  whereContainsIn: InputMaybe<WhereContainsInFilterInput>;
  whereIn: InputMaybe<WhereInFiltersInput>;
  whereNotBetween: InputMaybe<WhereNotBetweenFiltersInput>;
  whereNotIn: InputMaybe<WhereNotInFiltersInput>;
  whereNotNull: InputMaybe<Scalars['String']['input']>;
  whereNull: InputMaybe<Scalars['String']['input']>;
};


export type People_Person_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type People_Person_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumber = {
  __typename?: 'phoneNumber_PhoneNumber';
  carrierName: Maybe<Scalars['String']['output']>;
  countryCode: Maybe<Scalars['String']['output']>;
  description: Maybe<Scalars['String']['output']>;
  extension: Maybe<Scalars['String']['output']>;
  format: Maybe<Scalars['String']['output']>;
  formatForCountry: Maybe<Scalars['String']['output']>;
  formatForMobileDialing: Maybe<Scalars['String']['output']>;
  number: Maybe<Scalars['String']['output']>;
  region: Maybe<Scalars['String']['output']>;
  regionCode: Maybe<Scalars['String']['output']>;
  timezones: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  type: Maybe<Scalars['Int']['output']>;
};


/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumberCarrierNameArgs = {
  locale: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumberDescriptionArgs = {
  locale: InputMaybe<Scalars['String']['input']>;
  region: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumberFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumberFormatForCountryArgs = {
  region: InputMaybe<Scalars['String']['input']>;
};


/** This is the interface implemented by all phone number fields. */
export type PhoneNumber_PhoneNumberFormatForMobileDialingArgs = {
  format: InputMaybe<Scalars['Boolean']['input']>;
  region: InputMaybe<Scalars['String']['input']>;
};

export type PublicationsSectionEntryUnion = Publications_Publication_Entry;

export type Publications_Publication_Entry = ElementInterface & EntryInterface & {
  __typename?: 'publications_publication_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  authorPub: Maybe<Scalars['String']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  creditPub: Maybe<Scalars['String']['output']>;
  date: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  externalUrl: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Publications_Publication_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Publications_Publication_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Publications_Publication_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type RootPageInformation_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'rootPageInformation_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  customBreadcrumbs: Maybe<Array<Maybe<CustomBreadcrumbs_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type RootPageInformation_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};


export type RootPageInformation_GlobalSetCustomBreadcrumbsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SearchFilters_Category = CategoryInterface & ElementInterface & {
  __typename?: 'searchFilters_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type SearchFilters_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type SearchFilters_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchFilters_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type SearchResultsSectionEntryUnion = SearchResults_SearchResults_Entry;

export type SearchResults_SearchResults_Entry = ElementInterface & EntryInterface & {
  __typename?: 'searchResults_searchResults_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  dynamicComponent: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type SearchResults_SearchResults_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type SearchResults_SearchResults_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryDynamicComponentArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SearchResults_SearchResults_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type SidebarAssets_MatrixField = SidebarAssets_ExternalLink_BlockType | SidebarAssets_GalleryItem_BlockType | SidebarAssets_Header_BlockType | SidebarAssets_Image_BlockType | SidebarAssets_TextLink_BlockType;

export type SidebarAssets_ExternalLink_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sidebarAssets_externalLink_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  externalLink: Maybe<Scalars['String']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SidebarAssets_ExternalLink_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type SidebarAssets_GalleryItem_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sidebarAssets_galleryItem_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  galleryItem: Array<Maybe<EntryInterface>>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SidebarAssets_GalleryItem_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type SidebarAssets_GalleryItem_BlockTypeGalleryItemArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type SidebarAssets_Header_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sidebarAssets_header_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  assetHeader: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SidebarAssets_Header_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};

export type SidebarAssets_Image_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sidebarAssets_image_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  caption: Maybe<Scalars['String']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  image: Array<Maybe<AssetInterface>>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SidebarAssets_Image_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type SidebarAssets_Image_BlockTypeImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SidebarAssets_TextLink_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'sidebarAssets_textLink_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  textLink: Array<Maybe<AssetInterface>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SidebarAssets_TextLink_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type SidebarAssets_TextLink_BlockTypeTextLinkArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SimpleTable_MatrixField = SimpleTable_TableRow_BlockType;

export type SimpleTable_TableRow_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'simpleTable_tableRow_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  rowColor: Maybe<Scalars['String']['output']>;
  rowContent: Maybe<Scalars['String']['output']>;
  rowTitle: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SimpleTable_TableRow_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type SimpleTable_TableRow_BlockTypeRowColorArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type SiteInfo_GlobalSet = ElementInterface & GlobalSetInterface & {
  __typename?: 'siteInfo_GlobalSet';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  contactInfo: Array<Maybe<ContactInfo_MatrixField>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  facebook: Maybe<Scalars['String']['output']>;
  /** The handle of the global set. */
  handle: Scalars['String']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  instagram: Maybe<Scalars['String']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  linkedIn: Maybe<Scalars['String']['output']>;
  /** The name of the global set. */
  name: Scalars['String']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  siteDescription: Maybe<Scalars['String']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  siteImage: Array<Maybe<AssetInterface>>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  siteTitle: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  twitter: Maybe<Scalars['String']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  youTube: Maybe<Scalars['String']['output']>;
};


export type SiteInfo_GlobalSet_CountArgs = {
  field: Scalars['String']['input'];
};


export type SiteInfo_GlobalSetContactInfoArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type SiteInfo_GlobalSetSiteImageArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SlideshowItems_MatrixField = SlideshowItems_Slide_BlockType;

export type SlideshowItems_Slide_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'slideshowItems_slide_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  slideAsset: Array<Maybe<AssetInterface>>;
  slideContent: Maybe<Scalars['String']['output']>;
  slideTitle: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type SlideshowItems_Slide_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type SlideshowItems_Slide_BlockTypeSlideAssetArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SlideshowsSectionEntryUnion = Slideshows_Slideshow_Entry;

export type Slideshows_Slideshow_Entry = ElementInterface & EntryInterface & {
  __typename?: 'slideshows_slideshow_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  representativeAssetVariant: Array<Maybe<AssetInterface>>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  richTextDescription: Maybe<Scalars['String']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  slideshowItems: Array<Maybe<SlideshowItems_MatrixField>>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type Slideshows_Slideshow_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type Slideshows_Slideshow_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type Slideshows_Slideshow_EntryRepresentativeAssetVariantArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type Slideshows_Slideshow_EntrySlideshowItemsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SortOptions_Category = CategoryInterface & ElementInterface & {
  __typename?: 'sortOptions_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type SortOptions_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type SortOptions_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type SortOptions_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type StaffFilters_Category = CategoryInterface & ElementInterface & {
  __typename?: 'staffFilters_Category';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The category’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<CategoryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The category’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<CategoryInterface>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type StaffFilters_Category_CountArgs = {
  field: Scalars['String']['input'];
};


export type StaffFilters_CategoryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffFilters_CategoryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type StaffProfilesSectionEntryUnion = StaffProfiles_StaffProfiles_Entry;

export type StaffProfiles_Asset = AssetInterface & ElementInterface & {
  __typename?: 'staffProfiles_Asset';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Alternative text for the asset. */
  alt: Maybe<Scalars['String']['output']>;
  altText: Maybe<Scalars['String']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the asset file was last modified. */
  dateModified: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The file extension for the asset file. */
  extension: Scalars['String']['output'];
  /** The filename of the asset file. */
  filename: Scalars['String']['output'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint: Maybe<Array<Maybe<Scalars['Float']['output']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int']['output'];
  /** Returns the file’s format. */
  format: Maybe<Scalars['String']['output']>;
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean']['output'];
  /** The height in pixels or null if it’s not an image. */
  height: Maybe<Scalars['Int']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** An `<img>` tag based on this asset. */
  img: Maybe<Scalars['String']['output']>;
  /** The file kind. */
  kind: Scalars['String']['output'];
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType: Maybe<Scalars['String']['output']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String']['output'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The file size in bytes. */
  size: Maybe<Scalars['String']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The user who first added this asset (if known). */
  uploader: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId: Maybe<Scalars['Int']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url: Maybe<Scalars['String']['output']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId: Maybe<Scalars['Int']['output']>;
  /** The width in pixels or null if it’s not an image. */
  width: Maybe<Scalars['Int']['output']>;
};


export type StaffProfiles_Asset_CountArgs = {
  field: Scalars['String']['input'];
};


export type StaffProfiles_AssetFormatArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type StaffProfiles_AssetHeightArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type StaffProfiles_AssetNextArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_AssetPrevArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']['input']>;
};


export type StaffProfiles_AssetUploaderArgs = {
  assetUploaders: InputMaybe<Scalars['Boolean']['input']>;
  authors: InputMaybe<Scalars['Boolean']['input']>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  email: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  emailSubscription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  firstName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  fullName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  group: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasPhoto: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  lastName: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferredLanguage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  requestDeletion: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  school: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  username: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_AssetUrlArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};


export type StaffProfiles_AssetWidthArgs = {
  format: InputMaybe<Scalars['String']['input']>;
  handle: InputMaybe<Scalars['String']['input']>;
  height: InputMaybe<Scalars['Int']['input']>;
  immediately: InputMaybe<Scalars['Boolean']['input']>;
  interlace: InputMaybe<Scalars['String']['input']>;
  mode: InputMaybe<Scalars['String']['input']>;
  position: InputMaybe<Scalars['String']['input']>;
  quality: InputMaybe<Scalars['Int']['input']>;
  transform: InputMaybe<Scalars['String']['input']>;
  width: InputMaybe<Scalars['Int']['input']>;
};

export type StaffProfiles_StaffProfiles_Entry = ElementInterface & EntryInterface & {
  __typename?: 'staffProfiles_staffProfiles_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  contentBlocksNews: Maybe<Array<Maybe<ContentBlocksNews_NeoField>>>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  email: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  header: Maybe<Scalars['String']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  phoneNumber: Maybe<PhoneNumber_PhoneNumber>;
  plainText: Maybe<Scalars['String']['output']>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  pullQuote: Maybe<Scalars['String']['output']>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  staffBio: Maybe<Scalars['String']['output']>;
  staffLocation: Maybe<Scalars['String']['output']>;
  staffPortrait: Array<Maybe<AssetInterface>>;
  staffTags: Array<Maybe<TagInterface>>;
  staffTradingCard: Array<Maybe<AssetInterface>>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  subLocation: Array<Maybe<CategoryInterface>>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type StaffProfiles_StaffProfiles_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type StaffProfiles_StaffProfiles_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryContentBlocksNewsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fieldId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  level: InputMaybe<Scalars['QueryArgument']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  primaryOwnerId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_StaffProfiles_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type StaffProfiles_StaffProfiles_EntryStaffPortraitArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_StaffProfiles_EntryStaffTagsArgs = {
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_StaffProfiles_EntryStaffTradingCardArgs = {
  altText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateModified: InputMaybe<Scalars['String']['input']>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  filename: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  folderId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasAlt: InputMaybe<Scalars['Boolean']['input']>;
  height: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  includeSubfolders: InputMaybe<Scalars['Boolean']['input']>;
  kind: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  limit: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  size: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uploader: InputMaybe<Scalars['QueryArgument']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volume: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  volumeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withTransforms: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type StaffProfiles_StaffProfiles_EntrySubLocationArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  group: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  groupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search: InputMaybe<Scalars['String']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type StaffTags_Tag = ElementInterface & TagInterface & {
  __typename?: 'staffTags_Tag';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the group that contains the tag. */
  groupHandle: Scalars['String']['output'];
  /** The ID of the group that contains the tag. */
  groupId: Scalars['Int']['output'];
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type StaffTags_Tag_CountArgs = {
  field: Scalars['String']['input'];
};

export type TableRow_MatrixField = TableRow_TableCell_BlockType;

export type TableRow_TableCell_BlockType = ElementInterface & MatrixBlockInterface & {
  __typename?: 'tableRow_tableCell_BlockType';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  cellBackground: Maybe<Scalars['String']['output']>;
  cellContent: Maybe<Scalars['String']['output']>;
  cellWidth: Maybe<Scalars['Number']['output']>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int']['output'];
  hasFlexibleCellWidth: Maybe<Scalars['Boolean']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int']['output'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder: Maybe<Scalars['Int']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
};


export type TableRow_TableCell_BlockType_CountArgs = {
  field: Scalars['String']['input'];
};


export type TableRow_TableCell_BlockTypeCellBackgroundArgs = {
  label: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserProfilePageSectionEntryUnion = UserProfilePage_UserProfilePage_Entry;

export type UserProfilePage_UserProfilePage_Entry = ElementInterface & EntryInterface & {
  __typename?: 'userProfilePage_userProfilePage_Entry';
  /** Return a number of related elements for a field. */
  _count: Maybe<Scalars['Int']['output']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived. */
  archived: Maybe<Scalars['Boolean']['output']>;
  /** The entry’s author. */
  author: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical ID. */
  canonicalId: Maybe<Scalars['Int']['output']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid: Maybe<Scalars['String']['output']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated: Maybe<Scalars['DateTime']['output']>;
  /** The date the element was last updated. */
  dateUpdated: Maybe<Scalars['DateTime']['output']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId: Maybe<Scalars['Int']['output']>;
  /** The name of the draft. */
  draftName: Maybe<Scalars['String']['output']>;
  /** The notes for the draft. */
  draftNotes: Maybe<Scalars['String']['output']>;
  /** Whether the element is enabled. */
  enabled: Maybe<Scalars['Boolean']['output']>;
  /** Whether the element is enabled for the site. */
  enabledForSite: Maybe<Scalars['Boolean']['output']>;
  /** The expiry date of the entry. */
  expiryDate: Maybe<Scalars['DateTime']['output']>;
  /** The ID of the entity */
  id: Maybe<Scalars['ID']['output']>;
  /** Returns whether this is a draft. */
  isDraft: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is a revision. */
  isRevision: Maybe<Scalars['Boolean']['output']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft: Maybe<Scalars['Boolean']['output']>;
  /** The language of the site element is associated with. */
  language: Maybe<Scalars['String']['output']>;
  /** The element’s level within its structure */
  level: Maybe<Scalars['Int']['output']>;
  /** The element’s left position within its structure. */
  lft: Maybe<Scalars['Int']['output']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate: Maybe<Scalars['DateTime']['output']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId: Maybe<Scalars['Int']['output']>;
  /** The revision notes (from the `revisions` table). */
  revisionNotes: Maybe<Scalars['String']['output']>;
  /** The element’s right position within its structure. */
  rgt: Maybe<Scalars['Int']['output']>;
  /** The element’s structure’s root ID */
  root: Maybe<Scalars['Int']['output']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore: Maybe<Scalars['Int']['output']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String']['output'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int']['output'];
  /** The handle of the site the element is associated with. */
  siteHandle: Maybe<Scalars['String']['output']>;
  /** The ID of the site the element is associated with. */
  siteId: Maybe<Scalars['Int']['output']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId: Maybe<Scalars['ID']['output']>;
  /** The element’s slug. */
  slug: Maybe<Scalars['String']['output']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId: Maybe<Scalars['Int']['output']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid: Maybe<Scalars['String']['output']>;
  /** The element’s status. */
  status: Maybe<Scalars['String']['output']>;
  /** The element’s structure ID. */
  structureId: Maybe<Scalars['Int']['output']>;
  /** The element’s title. */
  title: Maybe<Scalars['String']['output']>;
  /** Whether the element has been soft-deleted. */
  trashed: Maybe<Scalars['Boolean']['output']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String']['output'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int']['output'];
  /** The UID of the entity */
  uid: Maybe<Scalars['String']['output']>;
  /** The element’s URI. */
  uri: Maybe<Scalars['String']['output']>;
  /** The element’s full URL */
  url: Maybe<Scalars['String']['output']>;
};


export type UserProfilePage_UserProfilePage_Entry_CountArgs = {
  field: Scalars['String']['input'];
};


export type UserProfilePage_UserProfilePage_EntryAncestorsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryChildrenArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryDescendantsArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryLocalizedArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryNextArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryParentArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};


export type UserProfilePage_UserProfilePage_EntryPrevArgs = {
  address: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  after: InputMaybe<Scalars['String']['input']>;
  ancestorDist: InputMaybe<Scalars['Int']['input']>;
  ancestorOf: InputMaybe<Scalars['Int']['input']>;
  assetAlbum: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  attribution: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorGroup: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  authorGroupId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  authorPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  backgroundColor: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  before: InputMaybe<Scalars['String']['input']>;
  cantoAssetSingle: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  caption: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  captionRichText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  city: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  closeDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  colorScheme: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  contentImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  country: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  creditPub: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  date: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dateCreated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  dateUpdated: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  descendantDist: InputMaybe<Scalars['Int']['input']>;
  descendantOf: InputMaybe<Scalars['Int']['input']>;
  description: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  dynamicComponent: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  editable: InputMaybe<Scalars['Boolean']['input']>;
  email: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEndTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventStartTime: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  eventType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  expiryDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  externalUrl: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  externalUrlTranslatable: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  featuredImage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  fixedOrder: InputMaybe<Scalars['Boolean']['input']>;
  focalPointX: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  focalPointY: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hasDescendants: InputMaybe<Scalars['Boolean']['input']>;
  header: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hero: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  hideTitle: InputMaybe<Scalars['Boolean']['input']>;
  id: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  imageQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  inReverse: InputMaybe<Scalars['Boolean']['input']>;
  investigationDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  investigationStatus: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  isVisible: InputMaybe<Scalars['Boolean']['input']>;
  jobPosition: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  landingPage: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  language: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  leaves: InputMaybe<Scalars['Boolean']['input']>;
  level: InputMaybe<Scalars['Int']['input']>;
  limit: InputMaybe<Scalars['Int']['input']>;
  linkTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  newsEntry: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  nextSiblingOf: InputMaybe<Scalars['Int']['input']>;
  offset: InputMaybe<Scalars['Int']['input']>;
  openDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  order: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  orderBy: InputMaybe<Scalars['String']['input']>;
  overlapHero: InputMaybe<Scalars['Boolean']['input']>;
  padImage: InputMaybe<Scalars['Boolean']['input']>;
  pageType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  personAffiliation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  phoneNumber: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  plainText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  positionedAfter: InputMaybe<Scalars['Int']['input']>;
  positionedBefore: InputMaybe<Scalars['Int']['input']>;
  postDate: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  postType: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  preferSites: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  pressReleaseId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  prevSiblingOf: InputMaybe<Scalars['Int']['input']>;
  pullQuote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  quote: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ratio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  ref: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  registrationCloseDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  registrationOpenDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedTo: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAll: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  relatedToAssets: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  representativeAssetVariant: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  richTextDescription: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  search: InputMaybe<Scalars['String']['input']>;
  section: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sectionId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  showSiblingNav: InputMaybe<Scalars['Boolean']['input']>;
  showSidebar: InputMaybe<Scalars['Boolean']['input']>;
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  siteId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  siteSettingsId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  slug: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  staffBio: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffPortrait: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTags: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  staffTradingCard: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  startDate: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  state: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  structureId: InputMaybe<Scalars['Int']['input']>;
  subHeroText: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  subLocation: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  teaser: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  text: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  timezone: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  title: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  type: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  typeId: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  uid: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  unique: InputMaybe<Scalars['Boolean']['input']>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  width: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']['input']>>>;
  withStructure: InputMaybe<Scalars['Boolean']['input']>;
};

export type RecentAssetsQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type RecentAssetsQueryQuery = { __typename?: 'Query', galleriesEntries: Array<{ __typename?: 'galleries_gallery_Entry', assetAlbum: Array<never | null> | null } | null> | null };

export type GalleryTitleQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  id: InputMaybe<Scalars['String']['input']>;
}>;


export type GalleryTitleQueryQuery = { __typename?: 'Query', galleriesEntries: Array<{ __typename?: 'galleries_gallery_Entry', id: string | null, title: string | null, assetAlbum: Array<never | null> | null } | null> | null };

export type GalleryImageQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  uri: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  id: InputMaybe<Scalars['String']['input']>;
}>;


export type GalleryImageQueryQuery = { __typename?: 'Query', galleriesEntries: Array<{ __typename?: 'galleries_gallery_Entry', assetAlbum: Array<never | null> | null } | null> | null };

export type AllGalleriesQueryQueryVariables = Exact<{
  site: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type AllGalleriesQueryQuery = { __typename?: 'Query', galleriesEntries: Array<{ __typename?: 'galleries_gallery_Entry', slug: string | null } | null> | null };

export type MyQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type MyQueryQuery = { __typename?: 'Query', entries: Array<{ __typename?: 'callouts_calloutEvent_Entry' } | { __typename?: 'callouts_calloutNews_Entry' } | { __typename?: 'callouts_calloutQuote_Entry' } | { __typename?: 'callouts_calloutTwoTone_Entry' } | { __typename?: 'callouts_callout_Entry' } | { __typename?: 'events_events_Entry' } | { __typename?: 'galleries_gallery_Entry', id: string | null, title: string | null, assetAlbum: Array<never | null> | null } | { __typename?: 'glossaryTerms_glossaryTerm_Entry' } | { __typename?: 'homepage_homepage_Entry' } | { __typename?: 'investigations_investigation_Entry' } | { __typename?: 'jobs_job_Entry' } | { __typename?: 'news_post_Entry' } | { __typename?: 'pages_educatorPages_Entry' } | { __typename?: 'pages_investigationLandingPage_Entry' } | { __typename?: 'pages_pages_Entry' } | { __typename?: 'pages_redirectPage_Entry' } | { __typename?: 'pages_studentPages_Entry' } | { __typename?: 'people_person_Entry' } | { __typename?: 'publications_publication_Entry' } | { __typename?: 'searchResults_searchResults_Entry' } | { __typename?: 'slideshows_slideshow_Entry' } | { __typename?: 'staffProfiles_staffProfiles_Entry' } | { __typename?: 'userProfilePage_userProfilePage_Entry' } | null> | null };


export const RecentAssetsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"RecentAssetsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleriesEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}},{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"galleries_gallery_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]}}]} as unknown as DocumentNode<RecentAssetsQueryQuery, RecentAssetsQueryQueryVariables>;
export const GalleryTitleQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GalleryTitleQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleriesEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}},{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"galleries_gallery_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"assetAlbum"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"key"},"value":{"kind":"StringValue","value":"id","block":false}},{"kind":"ObjectField","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"TitleEN"}},{"kind":"Field","name":{"kind":"Name","value":"TitleES"}}]}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GalleryTitleQueryQuery, GalleryTitleQueryQueryVariables>;
export const GalleryImageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GalleryImageQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"uri"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleriesEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"uri"},"value":{"kind":"Variable","name":{"kind":"Name","value":"uri"}}},{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"galleries_gallery_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assetAlbum"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"key"},"value":{"kind":"StringValue","value":"id","block":false}},{"kind":"ObjectField","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}},{"kind":"Field","name":{"kind":"Name","value":"TitleEN"}},{"kind":"Field","name":{"kind":"Name","value":"TitleES"}}]}},{"kind":"Field","name":{"kind":"Name","value":"default"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ContentType"}},{"kind":"Field","name":{"kind":"Name","value":"DateCreated"}},{"kind":"Field","name":{"kind":"Name","value":"DateModified"}},{"kind":"Field","name":{"kind":"Name","value":"DateUploaded"}},{"kind":"Field","name":{"kind":"Name","value":"Size"}}]}},{"kind":"Field","name":{"kind":"Name","value":"approvalStatus"}},{"kind":"Field","name":{"kind":"Name","value":"height"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"owner"}},{"kind":"Field","name":{"kind":"Name","value":"ownerName"}},{"kind":"Field","name":{"kind":"Name","value":"scheme"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"smartTags"}},{"kind":"Field","name":{"kind":"Name","value":"tag"}},{"kind":"Field","name":{"kind":"Name","value":"time"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"directUrlOriginal"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreview"}},{"kind":"Field","name":{"kind":"Name","value":"directUrlPreviewPlay"}},{"kind":"Field","name":{"kind":"Name","value":"download"}},{"kind":"Field","name":{"kind":"Name","value":"metadata"}},{"kind":"Field","name":{"kind":"Name","value":"preview"}},{"kind":"Field","name":{"kind":"Name","value":"PNG"}},{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GalleryImageQueryQuery, GalleryImageQueryQueryVariables>;
export const AllGalleriesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllGalleriesQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"site"}},"type":{"kind":"ListType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"galleriesEntries"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"site"},"value":{"kind":"Variable","name":{"kind":"Name","value":"site"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"galleries_gallery_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}}]}}]}}]} as unknown as DocumentNode<AllGalleriesQueryQuery, AllGalleriesQueryQueryVariables>;
export const MyQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"entries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"InlineFragment","typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"galleries_gallery_Entry"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"assetAlbum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"approvalStatus"}},{"kind":"Field","name":{"kind":"Name","value":"owner"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"smartTags"}},{"kind":"Field","name":{"kind":"Name","value":"url"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"HighJPG"}}]}},{"kind":"Field","name":{"kind":"Name","value":"additional"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"AltTextEN"}},{"kind":"Field","name":{"kind":"Name","value":"AltTextES"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionEN"}},{"kind":"Field","name":{"kind":"Name","value":"CaptionES"}},{"kind":"Field","name":{"kind":"Name","value":"Credit"}},{"kind":"Field","name":{"kind":"Name","value":"Description"}}]}},{"kind":"Field","name":{"kind":"Name","value":"default"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"DateCreated"}},{"kind":"Field","name":{"kind":"Name","value":"Author"}},{"kind":"Field","name":{"kind":"Name","value":"Copyright"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MyQueryQuery, MyQueryQueryVariables>;