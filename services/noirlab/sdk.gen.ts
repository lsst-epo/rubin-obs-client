// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from "@hey-api/client-next";
import type {
  AnnouncementsListData,
  AnnouncementsListResponse,
  AnnouncementsRetrieveData,
  AnnouncementsRetrieveResponse,
  MediaImagesListData,
  MediaImagesListResponse,
  MediaImagesRetrieveData,
  MediaImagesRetrieveResponse,
  MediaVideosListData,
  MediaVideosListResponse,
  MediaVideosRetrieveData,
  MediaVideosRetrieveResponse,
  ReleasesListData,
  ReleasesListResponse,
  ReleasesRetrieveData,
  ReleasesRetrieveResponse,
  VisitsActivitiesRetrieveData,
  VisitsActivitiesRetrieveResponse,
  VisitsShowingsListData,
  VisitsShowingsListResponse,
  BlogApiPostsListData,
  BlogApiPostsListResponse,
  CommunicationPagesApiCommitteeListData,
  CommunicationPagesApiCommitteeListResponse,
  CommunicationPagesApiCommitteeCreateData,
  CommunicationPagesApiCommitteeCreateResponse,
  CommunicationPagesApiCommitteeDestroyData,
  CommunicationPagesApiCommitteeDestroyResponse,
  CommunicationPagesApiCommitteeRetrieveData,
  CommunicationPagesApiCommitteeRetrieveResponse,
  CommunicationPagesApiCommitteePartialUpdateData,
  CommunicationPagesApiCommitteePartialUpdateResponse,
  CommunicationPagesApiCommitteeUpdateData,
  CommunicationPagesApiCommitteeUpdateResponse,
  ContactsApiImportsRetrieveData,
  DjangoplicityAdminPagesApiPagesListData,
  DjangoplicityAdminPagesApiPagesListResponse,
  DjangoplicityAdminPagesApiPagesCreateData,
  DjangoplicityAdminPagesApiPagesCreateResponse,
  DjangoplicityAdminPagesApiPagesDestroyData,
  DjangoplicityAdminPagesApiPagesDestroyResponse,
  DjangoplicityAdminPagesApiPagesRetrieveData,
  DjangoplicityAdminPagesApiPagesRetrieveResponse,
  DjangoplicityAdminPagesApiPagesPartialUpdateData,
  DjangoplicityAdminPagesApiPagesPartialUpdateResponse,
  DjangoplicityAdminPagesApiPagesUpdateData,
  DjangoplicityAdminPagesApiPagesUpdateResponse,
  DocumentationSchemaRetrieveData,
  DocumentationSchemaRetrieveResponse,
  ImagesD2dListData,
  ImagesD2dListResponse,
  ProductsModels3dD2dListData,
  ProductsModels3dD2dListResponse,
  ProductsPodcastD2dListData,
  ProductsPodcastD2dListResponse,
  VideosD2dListData,
  VideosD2dListResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";
import { blogApiPostsListResponseTransformer } from "./transformers.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export class AnnouncementsService {
  public static announcementsList<ThrowOnError extends boolean = false>(
    options?: Options<AnnouncementsListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      AnnouncementsListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/announcements/",
      ...options,
    });
  }

  public static announcementsRetrieve<ThrowOnError extends boolean = false>(
    options: Options<AnnouncementsRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      AnnouncementsRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/announcements/{id}/",
      ...options,
    });
  }
}

export class MediaService {
  public static mediaImagesList<ThrowOnError extends boolean = false>(
    options?: Options<MediaImagesListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      MediaImagesListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/media/images/",
      ...options,
    });
  }

  public static mediaImagesRetrieve<ThrowOnError extends boolean = false>(
    options: Options<MediaImagesRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      MediaImagesRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/media/images/{id}/",
      ...options,
    });
  }

  public static mediaVideosList<ThrowOnError extends boolean = false>(
    options?: Options<MediaVideosListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      MediaVideosListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/media/videos/",
      ...options,
    });
  }

  public static mediaVideosRetrieve<ThrowOnError extends boolean = false>(
    options: Options<MediaVideosRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      MediaVideosRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/media/videos/{id}/",
      ...options,
    });
  }
}

export class ReleasesService {
  public static releasesList<ThrowOnError extends boolean = false>(
    options?: Options<ReleasesListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ReleasesListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/releases/",
      ...options,
    });
  }

  public static releasesRetrieve<ThrowOnError extends boolean = false>(
    options: Options<ReleasesRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      ReleasesRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/releases/{id}/",
      ...options,
    });
  }
}

export class VisitsService {
  public static visitsActivitiesRetrieve<ThrowOnError extends boolean = false>(
    options: Options<VisitsActivitiesRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      VisitsActivitiesRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/visits/activities/{id}/",
      ...options,
    });
  }

  public static visitsShowingsList<ThrowOnError extends boolean = false>(
    options?: Options<VisitsShowingsListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      VisitsShowingsListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/api/v2/visits/showings/",
      ...options,
    });
  }
}

export class BlogService {
  public static blogApiPostsList<ThrowOnError extends boolean = false>(
    options?: Options<BlogApiPostsListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      BlogApiPostsListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      responseTransformer: blogApiPostsListResponseTransformer,
      url: "/public/blog/api/posts/",
      ...options,
    });
  }
}

export class CommunicationService {
  public static communicationPagesApiCommitteeList<
    ThrowOnError extends boolean = false
  >(options?: Options<CommunicationPagesApiCommitteeListData, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      CommunicationPagesApiCommitteeListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/",
      ...options,
    });
  }

  public static communicationPagesApiCommitteeCreate<
    ThrowOnError extends boolean = false
  >(options: Options<CommunicationPagesApiCommitteeCreateData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).post<
      CommunicationPagesApiCommitteeCreateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static communicationPagesApiCommitteeDestroy<
    ThrowOnError extends boolean = false
  >(options: Options<CommunicationPagesApiCommitteeDestroyData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).delete<
      CommunicationPagesApiCommitteeDestroyResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/{id}/",
      ...options,
    });
  }

  public static communicationPagesApiCommitteeRetrieve<
    ThrowOnError extends boolean = false
  >(
    options: Options<CommunicationPagesApiCommitteeRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      CommunicationPagesApiCommitteeRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/{id}/",
      ...options,
    });
  }

  /**
   * Extend partial_update to check which fields have change and add
   * a LogEntry to the admin interface
   */
  public static communicationPagesApiCommitteePartialUpdate<
    ThrowOnError extends boolean = false
  >(
    options: Options<
      CommunicationPagesApiCommitteePartialUpdateData,
      ThrowOnError
    >
  ) {
    return (options.client ?? _heyApiClient).patch<
      CommunicationPagesApiCommitteePartialUpdateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/{id}/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static communicationPagesApiCommitteeUpdate<
    ThrowOnError extends boolean = false
  >(options: Options<CommunicationPagesApiCommitteeUpdateData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).put<
      CommunicationPagesApiCommitteeUpdateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/communication/pages/api/committee/{id}/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }
}

export class ContactsService {
  public static contactsApiImportsRetrieve<
    ThrowOnError extends boolean = false
  >(options: Options<ContactsApiImportsRetrieveData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).get<
      unknown,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/contacts/api/imports/{id}/",
      ...options,
    });
  }
}

export class DjangoplicityService {
  public static djangoplicityAdminPagesApiPagesList<
    ThrowOnError extends boolean = false
  >(options?: Options<DjangoplicityAdminPagesApiPagesListData, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      DjangoplicityAdminPagesApiPagesListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/",
      ...options,
    });
  }

  public static djangoplicityAdminPagesApiPagesCreate<
    ThrowOnError extends boolean = false
  >(options: Options<DjangoplicityAdminPagesApiPagesCreateData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).post<
      DjangoplicityAdminPagesApiPagesCreateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static djangoplicityAdminPagesApiPagesDestroy<
    ThrowOnError extends boolean = false
  >(
    options: Options<DjangoplicityAdminPagesApiPagesDestroyData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).delete<
      DjangoplicityAdminPagesApiPagesDestroyResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/{id}/",
      ...options,
    });
  }

  public static djangoplicityAdminPagesApiPagesRetrieve<
    ThrowOnError extends boolean = false
  >(
    options: Options<DjangoplicityAdminPagesApiPagesRetrieveData, ThrowOnError>
  ) {
    return (options.client ?? _heyApiClient).get<
      DjangoplicityAdminPagesApiPagesRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/{id}/",
      ...options,
    });
  }

  /**
   * Extend partial_update to check which fields have change and add
   * a LogEntry to the admin interface
   */
  public static djangoplicityAdminPagesApiPagesPartialUpdate<
    ThrowOnError extends boolean = false
  >(
    options: Options<
      DjangoplicityAdminPagesApiPagesPartialUpdateData,
      ThrowOnError
    >
  ) {
    return (options.client ?? _heyApiClient).patch<
      DjangoplicityAdminPagesApiPagesPartialUpdateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/{id}/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }

  public static djangoplicityAdminPagesApiPagesUpdate<
    ThrowOnError extends boolean = false
  >(options: Options<DjangoplicityAdminPagesApiPagesUpdateData, ThrowOnError>) {
    return (options.client ?? _heyApiClient).put<
      DjangoplicityAdminPagesApiPagesUpdateResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/djangoplicity/admin/pages/api/pages/{id}/",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    });
  }
}

export class DocumentationService {
  /**
   * OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  public static documentationSchemaRetrieve<
    ThrowOnError extends boolean = false
  >(options?: Options<DocumentationSchemaRetrieveData, ThrowOnError>) {
    return (options?.client ?? _heyApiClient).get<
      DocumentationSchemaRetrieveResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/documentation/schema/",
      ...options,
    });
  }
}

export class ImagesService {
  public static imagesD2dList<ThrowOnError extends boolean = false>(
    options?: Options<ImagesD2dListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ImagesD2dListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/images/d2d/",
      ...options,
    });
  }
}

export class ProductsService {
  public static productsModels3dD2dList<ThrowOnError extends boolean = false>(
    options?: Options<ProductsModels3dD2dListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ProductsModels3dD2dListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/products/models3d/d2d/",
      ...options,
    });
  }

  public static productsPodcastD2dList<ThrowOnError extends boolean = false>(
    options?: Options<ProductsPodcastD2dListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      ProductsPodcastD2dListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/products/podcast/d2d/",
      ...options,
    });
  }
}

export class VideosService {
  public static videosD2dList<ThrowOnError extends boolean = false>(
    options?: Options<VideosD2dListData, ThrowOnError>
  ) {
    return (options?.client ?? _heyApiClient).get<
      VideosD2dListResponse,
      unknown,
      ThrowOnError
    >({
      security: [
        {
          scheme: "basic",
          type: "http",
        },
      ],
      url: "/public/videos/d2d/",
      ...options,
    });
  }
}
