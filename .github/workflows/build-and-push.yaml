name: build-and-push

on:
  push:
    branches:
       - 'develop'
       - 'master'
    tags:
      - 'v.*'
  pull_request:
    types:
      - 'opened'
      - 'synchronize'
      - 'reopened'
      - 'closed'
    branches:
      - 'develop'
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            gcr.io/skyviewer/rubinobs-client,enable=${{ github.ref != 'master' && github.ref_type != 'tag' }}
            gcr.io/edc-int-6c5e/rubinobs-client,enable=${{ github.ref == 'master'}}
            gcr.io/edc-prod-eef0/rubinobs-client,enable=${{ github.ref_type == 'tag'}}
          flavor: |
            latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        name: Login to GCP Dev
        uses: google-github-actions/setup-gcloud@v0
        if: ${{ github.ref != 'master' && github.ref_type != 'tag' }}
        with:
          service_account_key: ${{ secrets.DEV_SA_KEY }}
          project_id: skyviewer
          export_default_credentials: true
      - 
        name: Login to GCP Int
        uses: google-github-actions/setup-gcloud@v0
        if: ${{ github.ref == 'master' }}
        with:
          service_account_key: ${{ secrets.SKYVIEWER_INT_SERVICE_ACCOUNT }}
          project_id: edc-int-6c5e
          export_default_credentials: true
      - 
        name: Login to GCP Prod
        uses: google-github-actions/setup-gcloud@v0
        if: ${{ github.ref_type == 'tag' }}
        with:
          service_account_key: ${{ secrets.PIPELINE_EPO_PROD_PROJECT  }}
          project_id: edc-prod-eef0
          export_default_credentials: true
      - 
        run: gcloud --quiet auth configure-docker
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: |
            type=gha
          cache-from: |
            type=gha
